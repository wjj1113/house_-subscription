{"ast":null,"code":"import React,{useState}from'react';import{runSimulation,getDifficultyColor,getSuccessRateColor}from'../utils/simulator';import{Container,Card,Title,Subtitle,Button,Label,FormGroup,Grid,Flex,Badge,ProgressBar,Alert}from'./styled/CommonStyles';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Simulator=_ref=>{let{userPoints,userInput}=_ref;const[simulationResult,setSimulationResult]=useState(null);const[selectedStrategy,setSelectedStrategy]=useState(null);const handleRunSimulation=()=>{const result=runSimulation(userPoints,userInput);setSimulationResult(result);};const getDifficultyText=difficulty=>{switch(difficulty){case'easy':return'쉬움';case'medium':return'보통';case'hard':return'어려움';default:return'알 수 없음';}};const getCategoryText=category=>{switch(category){case'public':return'공공분양';case'private':return'민간분양';case'special':return'특별공급';default:return'기타';}};const StrategyCard=_ref2=>{let{strategy,type}=_ref2;return/*#__PURE__*/_jsxs(Card,{style:{cursor:'pointer'},onClick:()=>setSelectedStrategy(strategy),children:[/*#__PURE__*/_jsxs(Flex,{justify:\"space-between\",align:\"center\",style:{marginBottom:'12px'},children:[/*#__PURE__*/_jsx(\"h3\",{style:{margin:0},children:strategy.name}),/*#__PURE__*/_jsx(Badge,{color:type==='recommended'?'#27ae60':'#f39c12',children:type==='recommended'?'추천':'대안'})]}),/*#__PURE__*/_jsx(\"p\",{style:{color:'#666',marginBottom:'16px'},children:strategy.description}),/*#__PURE__*/_jsxs(Grid,{columns:2,style:{marginBottom:'16px'},children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Label,{children:\"\\uD544\\uC694 \\uAC00\\uC810\"}),/*#__PURE__*/_jsxs(\"div\",{children:[strategy.minPoints,\"~\",strategy.maxPoints,\"\\uC810\"]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Label,{children:\"\\uC131\\uACF5\\uB960\"}),/*#__PURE__*/_jsxs(\"div\",{style:{color:getSuccessRateColor(strategy.successRate)},children:[strategy.successRate,\"%\"]})]})]}),/*#__PURE__*/_jsxs(Flex,{justify:\"space-between\",align:\"center\",children:[/*#__PURE__*/_jsx(Badge,{color:getDifficultyColor(strategy.difficulty),children:getDifficultyText(strategy.difficulty)}),/*#__PURE__*/_jsx(Badge,{color:\"#3498db\",children:getCategoryText(strategy.category)})]})]});};return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Title,{children:\"\\uCCAD\\uC57D \\uC804\\uB7B5 \\uC2DC\\uBBAC\\uB808\\uC774\\uD130\"}),/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Subtitle,{children:\"\\uC2DC\\uBBAC\\uB808\\uC774\\uC158 \\uC815\\uBCF4\"}),/*#__PURE__*/_jsxs(Grid,{columns:2,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Label,{children:\"\\uD604\\uC7AC \\uAC00\\uC810\"}),/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'1.5rem',fontWeight:'bold',color:'#2c3e50'},children:[userPoints,\"\\uC810\"]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Label,{children:\"\\uC120\\uD638 \\uC9C0\\uC5ED\"}),/*#__PURE__*/_jsx(\"div\",{children:userInput.region})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Label,{children:\"\\uAC00\\uAD6C \\uD615\\uD0DC\"}),/*#__PURE__*/_jsx(\"div\",{children:userInput.householdType==='single'?'1인 가구':userInput.householdType==='couple'?'부부':'가족'})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Label,{children:\"\\uC5F0\\uC18C\\uB4DD\"}),/*#__PURE__*/_jsxs(\"div\",{children:[userInput.income,\"\\uB9CC\\uC6D0\"]})]})]}),/*#__PURE__*/_jsx(Flex,{justify:\"center\",style:{marginTop:'24px'},children:/*#__PURE__*/_jsx(Button,{onClick:handleRunSimulation,variant:\"primary\",children:\"\\uC804\\uB7B5 \\uC2DC\\uBBAC\\uB808\\uC774\\uC158 \\uC2E4\\uD589\"})})]}),simulationResult&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Subtitle,{children:\"\\uC2DC\\uBBAC\\uB808\\uC774\\uC158 \\uACB0\\uACFC\"}),/*#__PURE__*/_jsxs(Alert,{type:simulationResult.successProbability>=70?'success':simulationResult.successProbability>=50?'warning':'error',children:[/*#__PURE__*/_jsxs(\"strong\",{children:[\"\\uC804\\uCCB4 \\uC131\\uACF5 \\uD655\\uB960: \",simulationResult.successProbability.toFixed(1),\"%\"]}),simulationResult.successProbability>=70?' - 높은 성공 가능성!':simulationResult.successProbability>=50?' - 보통 성공 가능성':' - 낮은 성공 가능성']}),/*#__PURE__*/_jsx(ProgressBar,{progress:simulationResult.successProbability,color:getSuccessRateColor(simulationResult.successProbability)})]}),/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Subtitle,{children:\"\\uCD94\\uCC9C \\uC804\\uB7B5\"}),simulationResult.recommendedStrategies.length>0?/*#__PURE__*/_jsx(Grid,{columns:1,children:simulationResult.recommendedStrategies.map(strategy=>/*#__PURE__*/_jsx(StrategyCard,{strategy:strategy,type:\"recommended\"},strategy.id))}):/*#__PURE__*/_jsx(Alert,{type:\"warning\",children:\"\\uD604\\uC7AC \\uAC00\\uC810\\uC73C\\uB85C \\uCD94\\uCC9C\\uD560 \\uC218 \\uC788\\uB294 \\uC804\\uB7B5\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4. \\uB300\\uC548 \\uC804\\uB7B5\\uC744 \\uD655\\uC778\\uD574\\uBCF4\\uC138\\uC694.\"})]}),/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Subtitle,{children:\"\\uB300\\uC548 \\uC804\\uB7B5\"}),simulationResult.alternativeStrategies.length>0?/*#__PURE__*/_jsx(Grid,{columns:1,children:simulationResult.alternativeStrategies.map(strategy=>/*#__PURE__*/_jsx(StrategyCard,{strategy:strategy,type:\"alternative\"},strategy.id))}):/*#__PURE__*/_jsx(Alert,{type:\"info\",children:\"\\uB300\\uC548 \\uC804\\uB7B5\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4. \\uAC00\\uC810\\uC744 \\uB192\\uC774\\uAC70\\uB098 \\uB2E4\\uB978 \\uC870\\uAC74\\uC744 \\uACE0\\uB824\\uD574\\uBCF4\\uC138\\uC694.\"})]})]}),selectedStrategy&&/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Subtitle,{children:\"\\uC804\\uB7B5 \\uC0C1\\uC138 \\uC815\\uBCF4\"}),/*#__PURE__*/_jsxs(Grid,{columns:2,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:selectedStrategy.name}),/*#__PURE__*/_jsx(\"p\",{children:selectedStrategy.description}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"\\uD544\\uC694 \\uAC00\\uC810 \\uBC94\\uC704\"}),/*#__PURE__*/_jsxs(\"div\",{children:[selectedStrategy.minPoints,\"~\",selectedStrategy.maxPoints,\"\\uC810\"]})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"\\uC608\\uC0C1 \\uC131\\uACF5\\uB960\"}),/*#__PURE__*/_jsxs(\"div\",{style:{color:getSuccessRateColor(selectedStrategy.successRate),fontSize:'1.2rem',fontWeight:'bold'},children:[selectedStrategy.successRate,\"%\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"\\uC801\\uC6A9 \\uC9C0\\uC5ED\"}),/*#__PURE__*/_jsx(\"div\",{children:selectedStrategy.region})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"\\uAC00\\uAD6C \\uD615\\uD0DC\"}),/*#__PURE__*/_jsx(\"div\",{children:selectedStrategy.householdType==='single'?'1인 가구':selectedStrategy.householdType==='couple'?'부부':'가족'})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"\\uBD84\\uC591 \\uC720\\uD615\"}),/*#__PURE__*/_jsx(\"div\",{children:getCategoryText(selectedStrategy.category)})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{children:\"\\uB09C\\uC774\\uB3C4\"}),/*#__PURE__*/_jsx(Badge,{color:getDifficultyColor(selectedStrategy.difficulty),children:getDifficultyText(selectedStrategy.difficulty)})]})]})]}),/*#__PURE__*/_jsx(Flex,{justify:\"center\",style:{marginTop:'24px'},children:/*#__PURE__*/_jsx(Button,{onClick:()=>setSelectedStrategy(null),variant:\"secondary\",children:\"\\uB2EB\\uAE30\"})})]})]});};export default Simulator;","map":{"version":3,"names":["React","useState","runSimulation","getDifficultyColor","getSuccessRateColor","Container","Card","Title","Subtitle","Button","Label","FormGroup","Grid","Flex","Badge","ProgressBar","Alert","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Simulator","_ref","userPoints","userInput","simulationResult","setSimulationResult","selectedStrategy","setSelectedStrategy","handleRunSimulation","result","getDifficultyText","difficulty","getCategoryText","category","StrategyCard","_ref2","strategy","type","style","cursor","onClick","children","justify","align","marginBottom","margin","name","color","description","columns","minPoints","maxPoints","successRate","fontSize","fontWeight","region","householdType","income","marginTop","variant","successProbability","toFixed","progress","recommendedStrategies","length","map","id","alternativeStrategies"],"sources":["/Users/ain/hana_sample/hana-subscription-calculator/src/components/Simulator.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Strategy, SimulationResult, PointCalculationInput } from '../types';\nimport { runSimulation, getDifficultyColor, getSuccessRateColor } from '../utils/simulator';\nimport {\n  Container,\n  Card,\n  Title,\n  Subtitle,\n  Button,\n  Label,\n  FormGroup,\n  Grid,\n  Flex,\n  Badge,\n  ProgressBar,\n  Alert\n} from './styled/CommonStyles';\n\ninterface SimulatorProps {\n  userPoints: number;\n  userInput: PointCalculationInput;\n}\n\nconst Simulator: React.FC<SimulatorProps> = ({ userPoints, userInput }) => {\n  const [simulationResult, setSimulationResult] = useState<SimulationResult | null>(null);\n  const [selectedStrategy, setSelectedStrategy] = useState<Strategy | null>(null);\n\n  const handleRunSimulation = () => {\n    const result = runSimulation(userPoints, userInput);\n    setSimulationResult(result);\n  };\n\n  const getDifficultyText = (difficulty: string) => {\n    switch (difficulty) {\n      case 'easy': return '쉬움';\n      case 'medium': return '보통';\n      case 'hard': return '어려움';\n      default: return '알 수 없음';\n    }\n  };\n\n  const getCategoryText = (category: string) => {\n    switch (category) {\n      case 'public': return '공공분양';\n      case 'private': return '민간분양';\n      case 'special': return '특별공급';\n      default: return '기타';\n    }\n  };\n\n  const StrategyCard: React.FC<{ strategy: Strategy; type: 'recommended' | 'alternative' }> = ({ strategy, type }) => (\n    <Card style={{ cursor: 'pointer' }} onClick={() => setSelectedStrategy(strategy)}>\n      <Flex justify=\"space-between\" align=\"center\" style={{ marginBottom: '12px' }}>\n        <h3 style={{ margin: 0 }}>{strategy.name}</h3>\n        <Badge color={type === 'recommended' ? '#27ae60' : '#f39c12'}>\n          {type === 'recommended' ? '추천' : '대안'}\n        </Badge>\n      </Flex>\n      \n      <p style={{ color: '#666', marginBottom: '16px' }}>{strategy.description}</p>\n      \n      <Grid columns={2} style={{ marginBottom: '16px' }}>\n        <div>\n          <Label>필요 가점</Label>\n          <div>{strategy.minPoints}~{strategy.maxPoints}점</div>\n        </div>\n        <div>\n          <Label>성공률</Label>\n          <div style={{ color: getSuccessRateColor(strategy.successRate) }}>\n            {strategy.successRate}%\n          </div>\n        </div>\n      </Grid>\n      \n      <Flex justify=\"space-between\" align=\"center\">\n        <Badge color={getDifficultyColor(strategy.difficulty)}>\n          {getDifficultyText(strategy.difficulty)}\n        </Badge>\n        <Badge color=\"#3498db\">\n          {getCategoryText(strategy.category)}\n        </Badge>\n      </Flex>\n    </Card>\n  );\n\n  return (\n    <Container>\n      <Title>청약 전략 시뮬레이터</Title>\n      \n      <Card>\n        <Subtitle>시뮬레이션 정보</Subtitle>\n        <Grid columns={2}>\n          <div>\n            <Label>현재 가점</Label>\n            <div style={{ fontSize: '1.5rem', fontWeight: 'bold', color: '#2c3e50' }}>\n              {userPoints}점\n            </div>\n          </div>\n          <div>\n            <Label>선호 지역</Label>\n            <div>{userInput.region}</div>\n          </div>\n          <div>\n            <Label>가구 형태</Label>\n            <div>\n              {userInput.householdType === 'single' ? '1인 가구' : \n               userInput.householdType === 'couple' ? '부부' : '가족'}\n            </div>\n          </div>\n          <div>\n            <Label>연소득</Label>\n            <div>{userInput.income}만원</div>\n          </div>\n        </Grid>\n        \n        <Flex justify=\"center\" style={{ marginTop: '24px' }}>\n          <Button onClick={handleRunSimulation} variant=\"primary\">\n            전략 시뮬레이션 실행\n          </Button>\n        </Flex>\n      </Card>\n\n      {simulationResult && (\n        <>\n          <Card>\n            <Subtitle>시뮬레이션 결과</Subtitle>\n            \n            <Alert type={simulationResult.successProbability >= 70 ? 'success' : \n                        simulationResult.successProbability >= 50 ? 'warning' : 'error'}>\n              <strong>전체 성공 확률: {simulationResult.successProbability.toFixed(1)}%</strong>\n              {simulationResult.successProbability >= 70 ? ' - 높은 성공 가능성!' :\n               simulationResult.successProbability >= 50 ? ' - 보통 성공 가능성' : ' - 낮은 성공 가능성'}\n            </Alert>\n\n            <ProgressBar \n              progress={simulationResult.successProbability} \n              color={getSuccessRateColor(simulationResult.successProbability)}\n            />\n          </Card>\n\n          <Card>\n            <Subtitle>추천 전략</Subtitle>\n            {simulationResult.recommendedStrategies.length > 0 ? (\n              <Grid columns={1}>\n                {simulationResult.recommendedStrategies.map(strategy => (\n                  <StrategyCard key={strategy.id} strategy={strategy} type=\"recommended\" />\n                ))}\n              </Grid>\n            ) : (\n              <Alert type=\"warning\">\n                현재 가점으로 추천할 수 있는 전략이 없습니다. 대안 전략을 확인해보세요.\n              </Alert>\n            )}\n          </Card>\n\n          <Card>\n            <Subtitle>대안 전략</Subtitle>\n            {simulationResult.alternativeStrategies.length > 0 ? (\n              <Grid columns={1}>\n                {simulationResult.alternativeStrategies.map(strategy => (\n                  <StrategyCard key={strategy.id} strategy={strategy} type=\"alternative\" />\n                ))}\n              </Grid>\n            ) : (\n              <Alert type=\"info\">\n                대안 전략이 없습니다. 가점을 높이거나 다른 조건을 고려해보세요.\n              </Alert>\n            )}\n          </Card>\n        </>\n      )}\n\n      {selectedStrategy && (\n        <Card>\n          <Subtitle>전략 상세 정보</Subtitle>\n          \n          <Grid columns={2}>\n            <div>\n              <h3>{selectedStrategy.name}</h3>\n              <p>{selectedStrategy.description}</p>\n              \n              <FormGroup>\n                <Label>필요 가점 범위</Label>\n                <div>{selectedStrategy.minPoints}~{selectedStrategy.maxPoints}점</div>\n              </FormGroup>\n              \n              <FormGroup>\n                <Label>예상 성공률</Label>\n                <div style={{ color: getSuccessRateColor(selectedStrategy.successRate), fontSize: '1.2rem', fontWeight: 'bold' }}>\n                  {selectedStrategy.successRate}%\n                </div>\n              </FormGroup>\n            </div>\n            \n            <div>\n              <FormGroup>\n                <Label>적용 지역</Label>\n                <div>{selectedStrategy.region}</div>\n              </FormGroup>\n              \n              <FormGroup>\n                <Label>가구 형태</Label>\n                <div>\n                  {selectedStrategy.householdType === 'single' ? '1인 가구' : \n                   selectedStrategy.householdType === 'couple' ? '부부' : '가족'}\n                </div>\n              </FormGroup>\n              \n              <FormGroup>\n                <Label>분양 유형</Label>\n                <div>{getCategoryText(selectedStrategy.category)}</div>\n              </FormGroup>\n              \n              <FormGroup>\n                <Label>난이도</Label>\n                <Badge color={getDifficultyColor(selectedStrategy.difficulty)}>\n                  {getDifficultyText(selectedStrategy.difficulty)}\n                </Badge>\n              </FormGroup>\n            </div>\n          </Grid>\n          \n          <Flex justify=\"center\" style={{ marginTop: '24px' }}>\n            <Button onClick={() => setSelectedStrategy(null)} variant=\"secondary\">\n              닫기\n            </Button>\n          </Flex>\n        </Card>\n      )}\n    </Container>\n  );\n};\n\nexport default Simulator; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}